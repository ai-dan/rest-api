DROP TABLE IF EXISTS as141220.SUBSTITUTION;
DROP TABLE IF EXISTS as141220.TAGGED;
DROP TABLE IF EXISTS as141220.TAG;
DROP TABLE IF EXISTS as141220.REQUIRES;
DROP TABLE IF EXISTS as141220.INCLUDES;
DROP TABLE IF EXISTS as141220.STEP;
DROP TABLE IF EXISTS as141220.[CONTAINS];
DROP TABLE IF EXISTS as141220.PAIRING;
DROP TABLE IF EXISTS as141220.RECIPE;
DROP TABLE IF EXISTS as141220.IMPLEMENT;
DROP TABLE IF EXISTS as141220.INGREDIENT;
DROP TABLE IF EXISTS as141220.COMPONENT;
DROP TABLE IF EXISTS as141220.VIEWERSHIP;
DROP TABLE IF EXISTS as141220.COLLECTION;
DROP TABLE IF EXISTS as141220.MEMBERSHIP;
DROP TABLE IF EXISTS as141220.[GROUP];
DROP TABLE IF EXISTS as141220.[USER];
DROP TABLE IF EXISTS as141220.AGENT;

CREATE TABLE as141220.AGENT(
    Agent_id INT,
    Agent_type VARCHAR(5) NOT NULL,
    CONSTRAINT PK_AGENT_AGENT_ID PRIMARY KEY (Agent_id)
);

CREATE TABLE as141220.[USER](
    User_id INT,
    First_name VARCHAR(64),
    Last_name VARCHAR(64),
    Email VARCHAR(64),
    CONSTRAINT PK_USER_USER_ID PRIMARY KEY (User_id),
    CONSTRAINT FK_USER_USER_ID_AGENT_AGENT_ID FOREIGN KEY (User_id) REFERENCES as141220.AGENT (Agent_id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE as141220.[GROUP](
    Group_id INT,
    Group_name VARCHAR(64),
    Owner_id INT,
    CONSTRAINT PK_GROUP_GROUP_ID PRIMARY KEY (Group_id),
    CONSTRAINT FK_GROUP_GROUP_ID_AGENT_AGENT_ID FOREIGN KEY (Group_id) REFERENCES as141220.AGENT (Agent_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_GROUP_OWNER_ID_USER_USER_ID FOREIGN KEY (Owner_id) REFERENCES as141220.[USER] (User_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.MEMBERSHIP(
    Group_id INT,
    User_id INT,
    CONSTRAINT PK_MEMBERSHIP_GROUP_ID_USER_ID PRIMARY KEY (Group_id, User_id),
    CONSTRAINT FK_MEMBERSHIP_GROUP_ID_GROUP_GROUP_ID FOREIGN KEY (Group_id) REFERENCES as141220.[GROUP] (Group_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_MEMBERSHIP_USER_ID_USER_USER_ID FOREIGN KEY (User_id) REFERENCES as141220.[USER] (User_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.COLLECTION(
    Collection_id INT,
    Collection_name VARCHAR(64),
    Collection_type VARCHAR(9),
    Owner_id INT,
    CONSTRAINT PK_COLLECTION_COLLECTION_ID PRIMARY KEY (Collection_id),
    CONSTRAINT FK_COLLECTION_OWNER_ID_AGENT_AGENT_ID FOREIGN KEY (Owner_id) REFERENCES as141220.AGENT (Agent_id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE as141220.VIEWERSHIP(
    Collection_id INT,
    Viewer_id INT,
    CONSTRAINT PK_VIEWERSHIP_COLLECTION_ID_VIEWER_ID PRIMARY KEY (Collection_id, Viewer_id),
    CONSTRAINT FK_VIEWERSHIP_COLLECTION_ID_COLLECTION_COLLECTION_ID FOREIGN KEY (Collection_id) REFERENCES as141220.COLLECTION (Collection_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_VIEWERSHIP_VIEWER_ID_AGENT_AGENT_ID FOREIGN KEY (Viewer_id) REFERENCES as141220.AGENT (Agent_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.COMPONENT(
    Component_id INT,
    Component_name VARCHAR(64),
    Component_type VARCHAR(10) NOT NULL,
    CONSTRAINT PK_COMPONENT_COMPONENT_ID PRIMARY KEY (Component_id)
);

CREATE TABLE as141220.INGREDIENT(
    Ingredient_id INT,
    Ingredient_type VARCHAR(64),
    CONSTRAINT PK_INGREDIENT_INGREDIENT_ID PRIMARY KEY (Ingredient_id),
    CONSTRAINT FK_INGREDIENT_INGREDIENT_ID_COMPONENT_COMPONENT_ID FOREIGN KEY (Ingredient_id) REFERENCES as141220.COMPONENT (Component_id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE as141220.IMPLEMENT(
    Implement_id INT,
    Implement_type VARCHAR(64),
    CONSTRAINT PK_IMPLEMENT_IMPLEMENT_ID PRIMARY KEY (Implement_id),
    CONSTRAINT FK_IMPLEMENT_IMPLEMENT_ID_COMPONENT_COMPONENT_ID FOREIGN KEY (Implement_id) REFERENCES as141220.COMPONENT (Component_id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE as141220.RECIPE(
    Recipe_id INT,
    Source_id INT NOT NULL DEFAULT -1,
    Base_id INT NOT NULL DEFAULT -1,
    CONSTRAINT PK_RECIPE_RECIPE_ID PRIMARY KEY (Recipe_id),
    CONSTRAINT FK_RECIPE_SOURCE_ID_AGENT_AGENT_ID FOREIGN KEY (Source_id) REFERENCES as141220.AGENT (Agent_id)
    ON DELETE SET DEFAULT ON UPDATE CASCADE,
    CONSTRAINT FK_RECIPE_BASE_ID_RECIPE_RECIPE_ID FOREIGN KEY (Base_id) REFERENCES as141220.RECIPE (Recipe_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION -- Would like to SET DEFAULT/CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.PAIRING(
    [First] INT,
    [Second] INT,
    Source_id INT,
    Note VARCHAR(256),
    CONSTRAINT PK_PAIRING_FIRST_SECOND PRIMARY KEY ([First], [Second]),
    CONSTRAINT FK_PAIRING_FIRST_RECIPE_RECIPE_ID FOREIGN KEY ([First]) REFERENCES as141220.RECIPE (Recipe_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PAIRING_SECOND_RECIPE_RECIPE_ID FOREIGN KEY ([Second]) REFERENCES as141220.RECIPE (Recipe_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
    CONSTRAINT FK_PAIRING_SOURCE_ID_AGENT_AGENT_ID FOREIGN KEY (Source_id) REFERENCES as141220.AGENT (Agent_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION -- Would like to SET DEFAULT/CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.[CONTAINS](
    Collection_id INT,
    Recipe_id INT,
    Time_added DATETIME DEFAULT CURRENT_TIMESTAMP,
    Rank INT NOT NULL DEFAULT -1,
    Note VARCHAR(256) NOT NULL DEFAULT '',
    CONSTRAINT PK_CONTAINS_COLLECTION_ID_RECIPE_ID_TIME_ADDED PRIMARY KEY (Collection_id, Recipe_id, Time_added),
    CONSTRAINT FK_CONTAINS_COLLECTION_ID_COLLECTION_COLLECTION_ID FOREIGN KEY (Collection_id) REFERENCES as141220.COLLECTION (Collection_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CONTAINS_RECIPE_ID_RECIPE_RECIPE_ID FOREIGN KEY (Recipe_id) REFERENCES as141220.RECIPE (Recipe_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.STEP(
    Step_id INT,
    [Action] VARCHAR(64) NOT NULL,
    Duration VARCHAR(64) NOT NULL DEFAULT '0',
    CONSTRAINT PK_STEP_STEP_ID PRIMARY KEY (Step_id),
    CONSTRAINT UNIQUE_STEP_ACTION_DURATION UNIQUE ([Action], Duration)
);

CREATE TABLE as141220.INCLUDES(
    Recipe_id INT,
    Step_id INT,
    [Order] INT,
    CONSTRAINT PK_INCLUDES_RECIPE_ID_ORDER PRIMARY KEY (Recipe_id, [Order]),
    CONSTRAINT FK_INCLUDES_RECIPE_ID_RECIPE_RECIPE_ID FOREIGN KEY (Recipe_id) REFERENCES as141220.RECIPE (Recipe_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_INCLUDES_STEP_ID_STEP_STEP_ID FOREIGN KEY (Step_id) REFERENCES as141220.STEP (Step_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.REQUIRES(
    Recipe_id INT,
    Step_number INT,
    Component_id INT,
    Quantity INT NOT NULL DEFAULT 1,
    Unit VARCHAR(64) NOT NULL DEFAULT '',
    CONSTRAINT PK_REQUIRES_RECIPE_ID_STEP_ID_COMPONENT_ID PRIMARY KEY (Recipe_id, Step_number, Component_id),
    CONSTRAINT FK_REQUIRES_RECIPE_ID_STEP_NUMBER_INCLUDES_RECIPE_ID_ORDER FOREIGN KEY (Recipe_id, Step_number) REFERENCES as141220.INCLUDES (Recipe_id, [Order])
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_REQUIRES_COMPONENT_ID_COMPONENT_COMPONENT_ID FOREIGN KEY (Component_id) REFERENCES as141220.COMPONENT (Component_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.TAG(
    Tag_id INT,
    Tag_type VARCHAR(11) NOT NULL,
    Tag_name VARCHAR(64) NOT NULL,
    Tag_detail VARCHAR(64) NOT NULL DEFAULT '',
    CONSTRAINT PK_TAG_TAG_ID PRIMARY KEY (Tag_id)
);

CREATE TABLE as141220.TAGGED(
    Recipe_id INT,
    Tag_id INT,
    CONSTRAINT PK_TAGGED_RECIPE_ID_TAG_ID PRIMARY KEY (Recipe_id, Tag_id),
    CONSTRAINT FK_TAGGED_RECIPE_ID_RECIPE_RECIPE_ID FOREIGN KEY (Recipe_id) REFERENCES as141220.RECIPE (Recipe_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_TAGGED_TAG_ID_TAG_TAG_ID FOREIGN KEY (Tag_id) REFERENCES as141220.TAG (Tag_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
);

CREATE TABLE as141220.SUBSTITUTION(
    Sub_item INT,
    Replaced_item INT,
    Step_id INT,
    Restriction_id INT,
    Sub_ratio VARCHAR(8),
    CONSTRAINT PK_SUBSTITUTION_SUB_ITEM_REPLACED_ITEM_STEP_ID_RESTRICTION_ID PRIMARY KEY (Sub_item, Replaced_item, Step_id, Restriction_id),
    CONSTRAINT FK_SUBSTITUTION_SUB_ITEM_COMPONENT_COMPONENT_ID FOREIGN KEY (Sub_item) REFERENCES as141220.COMPONENT (Component_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SUBSTITUTION_REPLACED_ITEM_COMPONENT_COMPONENT_ID FOREIGN KEY (Replaced_item) REFERENCES as141220.COMPONENT (Component_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
    CONSTRAINT FK_SUBSTITUTION_STEP_ID_STEP_STEP_ID FOREIGN KEY (Step_id) REFERENCES as141220.STEP (Step_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level
    CONSTRAINT FK_SUBSTITUTION_RESTRICTION_ID_TAG_TAG_ID FOREIGN KEY (Restriction_id) REFERENCES as141220.TAG (Tag_id)
    ON DELETE NO ACTION ON UPDATE NO ACTION, -- Would like to CASCADE here, but could create multiple cascade paths, so need to deal with this at the application level. Another business rule is that the referenced Tag_id needs to have Tag_type "restriction"
);
